# 72 ) 해밍 거리
# 두 정수를 입력 받아 몇 비트가 다른지 계산하라

# [ 풀이 1 ] XOR 풀이
# 해밍 거리를 구하는 문제로 여기서 해밍거리란 두 정수 또는 두 문자열의 차이를 말한다.
# 이진 수의 경우 다른 위치의 비트 개수를 구하면 그게 해밍거리다.
# XOR 연산을 하면 다른 위치는 1이 된다. 이후 1의 전체 개수를 리턴하면 된다.
def hammingDistance( x : int, y : int) -> int:

    # x^y 의 결과는 정수가 나오므로 bin()을 이용해 이진수로 변경
    # 여기서 1의 전체 개수를 count()함수를 통해 카우닡ㅇ하면 다른 자리의 개수, 즉 해밍 거리 값이 나온다.
    return bin(x ^ y).count('1')

if __name__ == "__main__":
    x = 1
    y = 4

    # 1 : 0 0 0 1
    # 4 : 0 1 0 1
    # 이기떄문에 다른건 2개다.
    print( hammingDistance(x,y), "         |    기대 출력값 : 2 ")


# 문자열 뒤집기, 리턴없이 리스트 내부를 직접 조작하라.
# 예제 1 ["h","e","l","l","o"]  출력 ["o","l","l","e","h"]
# 예제 2 ["H","a","n","n","a","h"] 출력 ["h","a","n","n","H"]
from typing import List


# 풀이 1 투포인터를 이용한 스왑
# 단어 그대로 2개의 포인터를 이용해 범위를 조정해가며 풀이하는 방식. 여기서는 점점 더 범위를 좁혀가며 스왑하는 형태로 풀이할 수 있다.
# 문제에서 '리턴 없이 리스트 내부를 직접 조작하라'는 제약 사항이 있으므로 다음과 같이 s 내부를 스왑하는 평태로 풀이하면 된다.
def reverseString(self, s: List[str]) -> None:
    left , right = 0, len(s)-1 # 양 끝 인덱스
    while left < right : #  두 포인터가 교차하기 전까지 반복
        s[left] , s[right] = s[right] , s[left] # # 가장 앞 문자와 가장 뒷 문자 교환
        left += 1  # 왼쪽 포인터 한 칸 오른쪽으로. 즉, 뒷쪽에서부터 앞쪽으로 이동
        right -= 1 # 오른쪽 포인터 한 칸 왼쪽으로. 즉, 앞쪽에서부터 뒷쪽으로 이동

# 풀이 2 파이썬 기본 기능 사용
def reverseString(self, s: List[str]) -> None:
    s.reverse()

    # TIP!
    # 입력값이 문자열이면 슬라이싱을 사용할 수 있음 s[::-1] 하지만 리트코드 사이트의 경우 이렇게 풀면 오류가 난다.
    # 코딩 테스트 시 위와 같은 문제가 발생하면 디버깅에 어려움을 겪을 수 있다.플랫폼의 특징에 대해 충분한 숙지가 필요하다.  

if __name__ == "__main__":
    s = ["h", "e", "l", "l", "o"]
    print("Before:", s)
    reverseString(s)
    print("After: ", s)